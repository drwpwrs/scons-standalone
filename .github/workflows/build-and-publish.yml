name: Build and Publish

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggers for testing

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runner: ubuntu-latest
            output_name: scons-linux
          - os: windows-latest
            runner: windows-latest
            output_name: scons-win.exe
          - os: macos-13
            runner: macos-13
            output_name: scons-macos-x86_64
          - os: macos-latest
            runner: macos-latest
            output_name: scons-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import=SCons.Script --name ${{ matrix.output_name }} src/scons_wrapper.py

      - name: Compress executable (Unix)
        if: runner.os != 'Windows'
        run: |
          cd dist
          zip -r ${{ matrix.output_name }}.zip ${{ matrix.output_name }}
          mv ${{ matrix.output_name }}.zip ../bin/

      - name: Compress executable (Windows)
        if: runner.os == 'Windows'
        run: |
          cd dist
          Compress-Archive -Path ${{ matrix.output_name }} -DestinationPath ${{ matrix.output_name }}.zip
          Move-Item ${{ matrix.output_name }}.zip ..\bin\

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}.zip
          path: bin/${{ matrix.output_name }}.zip

  npm_publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      version: ${{ steps.changesets.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-bun

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Prepare package
        run: |
          chmod +x bin/scons

      - name: Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          createGitHubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  github_release:
    name: Create GitHub Release
    needs: [build, npm_publish]
    if: needs.npm_publish.outputs.published == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Get SCons version
        id: get-scons-version
        run: |
          SCONS_VERSION=$(grep "^scons==" requirements.txt | cut -d'=' -f3)
          echo "scons_version=$SCONS_VERSION" >> $GITHUB_OUTPUT

      - name: Get version
        id: get-version
        run: echo "version=${{ needs.npm_publish.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: ${{ steps.get-version.outputs.version }} (SCons ${{ steps.get-scons-version.outputs.version }})
          body: |
            ## Changelog

            See the full changelog [here](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/CHANGELOG.md)

            This release corresponds to [SCons ${{ steps.get-scons-version.outputs.version }}](https://github.com/SCons/scons/releases/tag/${{ steps.get-scons-version.outputs.version }}).
          files: |
            bin/*.zip
